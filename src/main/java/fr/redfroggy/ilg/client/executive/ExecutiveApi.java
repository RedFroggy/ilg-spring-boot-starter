/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1-SNAPSHOT).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package fr.redfroggy.ilg.client.executive;

import fr.redfroggy.ilg.client.IlgApi;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiParam;
import javax.validation.constraints.Pattern;
import org.springframework.cache.annotation.CacheConfig;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;

@Api(value = "Executive", description = "the Executive API")
@CacheConfig(cacheNames = "ilgExecutiveApi", cacheResolver = "ilgCacheResolver", keyGenerator = "methodKeyGenerator")
public interface ExecutiveApi extends IlgApi {

    /**
     * GET /companies/{country}/{id}/executives/terms : Return all executives&#39;s terms for a given company
     *
     * @param country Country Code in ISO 3166-2 (required)
     * @param id Unique identifier representing a specific company (required)
     * @param requestParam blockId block identifier (optional), active true(active) or false(inactive) (optional),
     *                     positionRole Type of term (optional), ordersName Executive name (asc/desc) (optional),
     *                     ordersTermPositionCode Executive position code (asc/desc) (optional), ordersTermStartDate
     *                     Term start date (asc/desc) (optional)
     * @return  (status code 200)
     *         or Bad Request (status code 400)
     *         or Authentication Failure: Expired Token or Invalid Token (status code 401)
     *         or Forbidden (status code 403)
     *         or Resource not found (status code 404)
     */
    @Cacheable
    ResponseEntity<ExecutivesProjection2> getExecutivesTerms(@Pattern(regexp="^[A-Za-z]{2}$") @ApiParam(value =
            "Country Code in ISO 3166-2",required=true) @PathVariable("country") String country, @ApiParam(value = "Unique identifier " +
            "representing a specific company",required=true) @PathVariable("id") String id,
                                                             ExecutiveRequest requestParam);


    /**
     * GET /companies/{country}/{id}/executives/terms : Return all executives&#39;s terms for a given company
     *
     * @param id Unique identifier representing a specific company (required)
     * @param country Country Code in ISO 3166-2 (required)
     * @return  (status code 200)
     *         or Bad Request (status code 400)
     *         or Authentication Failure: Expired Token or Invalid Token (status code 401)
     *         or Forbidden (status code 403)
     *         or Resource not found (status code 404)
     */
    @Cacheable
    ResponseEntity<ExecutivesProjection2> getExecutivesTerms(@Pattern(regexp="^[A-Za-z]{2}$") @ApiParam(value =
            "Country Code in ISO 3166-2",required=true) @PathVariable("country") String country, @ApiParam(value = "Unique identifier " +
            "representing a specific company",required=true) @PathVariable("id") String id);
}
